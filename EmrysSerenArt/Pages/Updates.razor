@page "/updates"
@using MudBlazor
@using EmrysSerenShared
@inject HttpClient httpClient


<PageTitle>Emrys Seren Blog Updates</PageTitle>

<main class="mainUpdates">
    <div class="subHeader">
        <h2>Updates</h2>
    </div>
    <br>
    @if (BlogPosts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <MudTable T="BlogPostDetail" Items="@BlogPosts.Take(5)" Hover="true" Breakpoint="Breakpoint.None">
            <HeaderContent>
                <MudTh>UserName</MudTh>
                <MudTh>BlogDate</MudTh>
                <MudTh>BlogTitle</MudTh>
                <MudTh>BlogTag</MudTh>
                <MudTh>Details</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="UserName">@context.UserName</MudTd>
                <MudTd DataLabel="BlogDate">@context.BlogPostDate</MudTd>
                <MudTd DataLabel="BlogTitle">@context.BlogPostTitle</MudTd>
                <MudTd DataLabel="BlogTag">@context.BlogTag</MudTd>
                <MudTd DataLabel="Link"><MudLink Href="@($"updatedetail/{context.BlogPostDetailId}")"></MudLink></MudTd>
            </RowTemplate>
        </MudTable>
    }
</main>


@code {
    private MudTable<BlogPostDetail>
    mudTable;
    private IEnumerable<BlogPostDetail>
        BlogPosts = new List<BlogPostDetail>
            ();

            protected override async Task OnInitializedAsync()
            {
            BlogPosts = await httpClient.GetFromJsonAsync<List<BlogPostDetail>>("webapi/blogpost");
    }

}
