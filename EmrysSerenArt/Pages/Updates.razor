@page "/updates"
@using MudBlazor
@using EmrysSerenShared
@inject HttpClient httpClient


<PageTitle>Emrys Seren Blog Updates</PageTitle>

<main class="mainUpdates">
    <div class="subHeader">
        <h2>Updates</h2>
    </div>
    <br>
    @if (BlogPosts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <MudTable T="BlogPost" Items="@BlogPosts.Take(5)" Hover="true" Breakpoint="Breakpoint.None">
            <HeaderContent>
                <MudTh>UserAvatar</MudTh>
                <MudTh>UserName</MudTh>
                <MudTh>BlogDate</MudTh>
                <MudTh>BlogTitle</MudTh>
                <MudTh>CommentCount</MudTh>
                <MudTh>BlogPostTags</MudTh>
                <MudTh>Details</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Avatar">@context.UserAvatar</MudTd>
                <MudTd DataLabel="User">@context.UserName</MudTd>
                <MudTd DataLabel="Date">@context.BlogPostDate</MudTd>
                <MudTd DataLabel="Title">@context.BlogPostTitle</MudTd>
                <MudTd DataLabel="Comments">"@context.CommentCount</MudTd>
                <MudTd DataLabel="Tags">@context.BlogPostTags</MudTd>
                <MudTd DataLabel="Link"><MudLink Href="@($"updatedetail/{context.BlogPostId}")"></MudLink></MudTd>
            </RowTemplate>
        </MudTable>
    }
</main>

@code {
    private MudTable<BlogPost>
    mudTable;
    private IEnumerable<BlogPost>
        BlogPosts = new List<BlogPost>
            ();

            protected override async Task OnInitializedAsync()
            {
            BlogPosts = await httpClient.GetFromJsonAsync<List<BlogPost>>("webapi/blogpost");
    }

}
